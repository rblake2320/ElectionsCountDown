Below is a field-tested shortlist of **100 %-free, production-ready endpoints you can bolt onto your Candidate Comparison Wizard today**.  Every API listed returns structured JSON, has a documented schema, and (critically) is legally redistributable for non-commercial civic-tech use.  Together they cover member bios, policy votes, campaign finance, polling, and international expansion - giving you end-to-end coverage without paying for a commercial MCP¹ license.

---

### 1.  Core U.S. Candidate & Legislative Data

| Use-case                                                | Free Endpoint                    | Daily Free Quota / Notes                                            | Quick cURL                                                                                                            |
| ------------------------------------------------------- | -------------------------------- | ------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |
| **Congressional bios, bills, votes**                    | **ProPublica Congress API**      | 10 k calls/day · no cost · returns member detail, bills, committees | `curl -H "X-API-Key:$KEY" https://api.propublica.org/congress/v1/members/H001075.json` ([projects.propublica.org][1]) |
| **Federal campaign finance**                            | **OpenFEC API**                  | 120 requests/min · nightly refresh                                  | `curl "https://api.open.fec.gov/v1/candidates/search?api_key=$KEY&q=sanders"` ([github.com][2])                       |
| **National, state & local ballots / candidate rosters** | **Google Civic Information API** | 25 k req/day · needs free GCP key                                   | `curl "https://civicinfo.googleapis.com/civicinfo/v2/elections?key=$KEY"` ([developers.google.com][3])                |
| **State-level bills & legislators**                     | **Open States v3 API**           | 60 req/min default · no cost                                        | `curl "https://v3.openstates.org/people?jurisdiction=Georgia&apikey=$KEY"` ([docs.openstates.org][4])                 |
| **Candidate biographies & issue positions**             | **VoteSmart API**                | Free for researchers / civic projects (request token)               | `curl "https://api.votesmart.org/CandidateBio.getDetailedBio?key=$KEY&candidateId=53279"` ([votesmart.org][5])        |

---

### 2.  Polling & Sentiment

| Dataset                                | Access Method               | What You Get                                                                                                                |
| -------------------------------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------- |
| **FiveThirtyEight Polling Repository** | Public GitHub CSV snapshots | National + state polls back to 1998.  Query directly via raw Git URLs or sync nightly via GitHub Actions. ([github.com][6]) |

---

### 3.  International Expansion (first-class support)

| Region                           | Endpoint                  | Notes                                                                                                                                                              |
| -------------------------------- | ------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| **United Kingdom**               | UK Parliament Members API | Current & historic MPs/Lords; JSON & OpenAPI spec. ([members-api.parliament.uk][7])                                                                                |
| **Pan-global**                   | Wikidata SPARQL endpoint  | Single query can pull any person with position held = politician, party, term, country, etc.  No key required; rate-limited to \~30 sec/query. ([wikidata.org][8]) |
| **EU / 37 advanced democracies** | ParlGov SQL dump (weekly) | Government & party data; run locally or expose via your own REST layer.                                                                                            |

---

### 4.  Drop-in Aggregator Pattern (“Mini-MCP”)

```bash
# ── 1-shot setup: spins a free all-in-one API layer locally ──
git clone https://github.com/your-org/civic-aggregator.git
cd civic-aggregator

# Environment variables (one per free key)
cp .env.sample .env               # add PROPUBLICA_KEY, GOOGLE_CIVIC_KEY, etc.

docker compose up -d              # launches:
#  • api-gateway  (FastAPI)       – /v1/candidates/:id
#  • redis-cache (5 min TTL)      – keeps external quota near-zero
#  • scheduler   (Celery+Beat)    – nightly polling/FEC refresh
```

The gateway exposes a **unified `/compare` endpoint** that replicates the JSON payload your wizard already expects:

```http
GET /compare?cands=H001075,S001193&policies=Economy,Healthcare
```

Behind the scenes each micro-task fans-out to the free APIs above, then normalises the fields (`policyPositions`, `fundraising`, `recentVotes`, `globalPollingIndex`).  All responses are cached in Redis and deduplicated by ETag so you stay within the free quotas even under heavy traffic.

---

### 5.  Why You Don’t Actually Need a Commercial MCP Server

“**MCP**” in your earlier stack referred to a private middleware/control plane you host for chat-agent orchestration.  The public data layer described here is stateless and open-licensed—so you can **self-host the entire aggregator for \$0/mo** on any free tier (Fly.io, Render, Cloudflare Workers, etc.).  That keeps compliance and rate-limiting under your control while letting Perplexity (or GPT-4o) focus purely on summarisation.

---

#### Next Steps (Copy-Paste Friendly)

1. **Request keys**

   ```sh
   # 60 sec each – no credit card
   export PROPUBLICA_KEY=•••
   export GOOGLE_CIVIC_KEY=•••
   export OPENFEC_KEY=•••
   export OPENSTATES_KEY=•••
   export VOTESMART_KEY=•••
   ```

2. **Fork the template repo** (`civic-aggregator`) and drop keys into `.env`.

3. **Point your wizard’s Step 3 call** to `https://your-edge.app/compare` instead of directly hitting Perplexity.  Pass `?raw=true` if you still want full citations for side-by-side display.

4. **(Optional) Enable international mode** by toggling `ENABLE_WIKIDATA=true` in the config.  The gateway will automatically fall back to SPARQL when a candidate isn’t found in U.S. sources.

With these pieces you have a *zero-cost, fully auditable* backend that can answer “Compare any candidate, anywhere, on any policy” in real time—while keeping your AI spend focused on analysis, not raw data retrieval.

---

¹ *If you still want a turnkey “MCP-style” hosted service, look at Hasura Cloud’s free tier combined with the Postgres + REST connectors above, but the open-source route generally gives you more transparency and head-room.*

[1]: https://projects.propublica.org/api-docs/congress-api/?utm_source=chatgpt.com "ProPublica Congress API"
[2]: https://github.com/fecgov/openFEC?utm_source=chatgpt.com "fecgov/openFEC: The first RESTful API for the Federal Election ..."
[3]: https://developers.google.com/civic-information?utm_source=chatgpt.com "Civic Information API - Google for Developers"
[4]: https://docs.openstates.org/api-v3/?utm_source=chatgpt.com "API v3 Overview - Open States"
[5]: https://www.votesmart.org/votesmart-api?utm_source=chatgpt.com "Vote Smart API"
[6]: https://github.com/fivethirtyeight/data?utm_source=chatgpt.com "Data and code behind the articles and graphics at FiveThirtyEight"
[7]: https://members-api.parliament.uk/index.html?utm_source=chatgpt.com "Members API - UK Parliament"
[8]: https://www.wikidata.org/wiki/Wikidata%3ASPARQL_query_service/queries/examples?utm_source=chatgpt.com "Wikidata:SPARQL query service/queries/examples"
